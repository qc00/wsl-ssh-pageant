name: Release

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches:
      - main
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        goos: [windows]
        goarch: [amd64, arm64]
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=${GOARCH}
          if [ ${GOARCH} = "arm" ]; then
              export _NAME=${GOARCH}32-v${GOARM}a
          fi
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Get project dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/wsl-ssh-pageant.exe -trimpath
          go build -v -o build_assets/wsl-ssh-pageant-gui.exe -trimpath -ldflags "-H=windowsgui"

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          zip -9vr ../wsl-ssh-pageant-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./wsl-ssh-pageant-$ASSET_NAME.zip
          DGST=$FILE.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wsl-ssh-pageant-${{ steps.get_filename.outputs.ASSET_NAME }}
          path: ./build_assets/*
